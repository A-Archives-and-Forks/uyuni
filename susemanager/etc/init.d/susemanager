#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          susemanager
# Required-Start:    $syslog $remote_fs $time
# Should-Start:      $ALL
# Required-Stop:     $syslog $remote_fs
# Should-Stop:       $null
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Display message
# Description:       Display message where to connect to
### END INIT INFO

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     be verbose in local rc status and clear it afterwards
#      rc_status -v -r  ditto and clear both the local and overall rc status
#      rc_status -s     display "skipped" and exit with status 3
#      rc_status -u     display "unused" and exit with status 3
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num>
#      rc_reset         clear both the local and overall rc status
#      rc_exit          exit appropriate to overall rc status
#      rc_active        checks whether a service is activated by symlinks
. /etc/rc.status

# Reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0	  - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

case "$1" in
    start)
	#echo -n "Starting SUSE Manager "

	# Remember status and be verbose
	#rc_status -v
    if [ -d '/var/spacewalk' -o -d '/var/satellite' ]; then
        MYHOSTNAME=`hostname -f`
        echo -e "\n\t${done}SUSE Manager Server is running at https://$MYHOSTNAME\n"
    else
        echo -e "\n\t${done}To setup SUSE Manager please login and execute yast2 susemanager_setup\n"
    fi
	;;
    stop)
	# Remember status and be verbose
	rc_status -s
	;;
    try-restart|condrestart)
	## Do a restart only if the service was active before.
	## Note: try-restart is now part of LSB (as of 1.9).
	## RH has a similar command named condrestart.
	# Remember status and be quiet
	rc_status -s
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	# Remember status and be quiet
	rc_status -s
	;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart the service if it
	## is running.

	rc_status -s

	## Otherwise:
	#$0 try-restart
	#rc_status
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signaling, do nothing (!)

	rc_status -s
	
	## Otherwise if it does not support reload:
	#rc_failed 3
	#rc_status -v
	;;
    status)
	rc_status -s
	;;
    *)
	echo "Usage: $0 {start}"
	exit 1
	;;
esac
rc_exit
