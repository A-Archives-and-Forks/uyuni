Using the setup/migrate tools
=============================
if you want to setup a new machine call:

    > setup_dialog.sh
    > migration.sh -s

The setup_dialog.sh will store a file in /tmp/ that will
be parsed by "migration.sh -s"

if you want to migrate from an existing Satellite do

    > migration_dialog.sh
    > migration.sh -m

The migration_dialog.sh will store a file in /tmp/ that will
be parsed by "migration.sh -m"

"migration.sh -h" shows some help.

You can create the files in /tmp/ manually if you want because
the setup_dialog.sh and migration_dialog.sh are doing nothing else
than creating those files.

Manual Config
=============

SATELLITE_IP="10.10.3.248"
SATELLITE_HOST="satellite"
SATELLITE_DOMAIN="suse.de"
SATELLITE_FQDN="$SATELLITE_HOST.$SATELLITE_DOMAIN"
SATELLITE_DB_USER="rhnsat"
SATELLITE_DB_PASS="rhnsat"
SATELLITE_DB_SID="rhnsat"

TEMP_MANAGER_IP="10.10.100.239"
TEMP_MANAGER_USER="spacewalk"
TEMP_MANAGER_PASS="spacewalk"
# TEMP_MANAGER_PASS also used for sys db admin


# The SUSE Manager server needs to have the same hostname as the 
# old satellite server. 

# change the hostname to the satellite hostname
$> hostname $SATELLITE_HOST

# modify /etc/hosts to fake the own hostname
#
# add line 
# <ip>  <fqdn> <shortname>
#
$> echo -e "\n$TEMP_MANAGER_IP $SATELLITE_FQDN $SATELLITE_HOST" >> /etc/hosts

# test if the output of "hostname -f" is equal to $SATELLITE_FQDN
# test if "ping $SATELLITE_HOST" ping the own host

#
# initialize spacewalk
#

$> echo -e "9055\n\n$TEMP_MANAGER_PASS\n$TEMP_MANAGER_PASS\n" | /etc/init.d/oracle-xe configure
#
$> sed -i "s/:\/usr\/lib\/oracle\/10.2.0.4\/client.*:/:\/usr\/lib\/oracle\/xe\/app\/oracle\/product\/10.2.0\/server:/g" /etc/oratab
#
$> . /etc/profile.d/oracle.sh
#
$> cp $ORACLE_HOME/network/admin/tnsnames.ora /etc
#
$> restorecon -v /etc/tnsnames.ora

$> /etc/init.d/oracle-xe start

$> echo "create smallfile tablespace data_tbs datafile '/usr/lib/oracle/xe/oradata/XE/data_01.dbf' SIZE 3800M;
create user ruby identified by ruby default tablespace data_tbs;
grant dba to ruby;
GRANT EXECUTE ON dbms_lock TO ruby;
create user $TEMP_MANAGER_USER identified by $TEMP_MANAGER_PASS default tablespace data_tbs;
grant dba to $TEMP_MANAGER_USER;
alter system set processes = 400 scope=spfile;
alter system set "_optimizer_filter_pred_pullup"=false scope=spfile;
alter system set "_optimizer_cost_based_transformation"=off scope=spfile;
quit
" > /tmp/dbsetup.sql

$> sqlplus "sys/$TEMP_MANAGER_PASS@xe as sysdba" @/tmp/dbsetup.sql
$> rm /tmp/dbsetup.sql

$> echo "admin-email = galaxy-devel@suse.de
ssl-set-org = SUSE
ssl-set-org-unit = suse
ssl-set-city = Nuernberg
ssl-set-state = Bayern
ssl-set-country = DE
ssl-password = $TEMP_MANAGER_PASS
ssl-set-email = galaxy-devel@suse.de
ssl-config-sslvhost = Y
db-backend=oracle
db-user=$TEMP_MANAGER_USER
db-password=$TEMP_MANAGER_PASS
db-name=xe
db-host=localhost
db-port=1521
db-protocol=TCP
enable-tftp=Y
" > /tmp/spacewalk-answers

$> /usr/bin/spacewalk-setup --disconnected --answer-file=/tmp/spacewalk-answers
$> rm /tmp/spacewalk-answers

#
# end initialize spacewalk
#


$> # empty database, create tablespace
$> /usr/sbin/spacewalk-service stop
$> /etc/init.d/oracle-xe start
$> echo "drop user $TEMP_MANAGER_USER cascade;
create user $TEMP_MANAGER_USER identified by $TEMP_MANAGER_PASS default tablespace data_tbs;
grant dba to $TEMP_MANAGER_USER;
quit
" > /tmp/dbnewspacewalkuser.sql

$> sqlplus "sys/$TEMP_MANAGER_PASS@xe as sysdba" @/tmp/dbnewspacewalkuser.sql
$> rm /tmp/dbnewspacewalkuser.sql

$> # prepare remote dump
$> echo "rrxe =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = $SATELLITE_IP)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = $SATELLITE_DB_SID)
    )
  )
" >> /etc/tnsnames.ora

$> # dump remote DB, import into local DB and do a schema-upgrade
$> su - oracle
$> SATELLITE_DB_USER="rhnsat"
$> SATELLITE_DB_PASS="rhnsat"
$> exp $SATELLITE_DB_USER/$SATELLITE_DB_PASS@rrxe owner=$SATELLITE_DB_USER consistent=y statistics=none file=/tmp/sat.oracleXE.dmp log=/tmp/rhn.oracleXE.log
$> ORACLE_SID=XE; export ORACLE_SID
$> imp \'/ as sysdba\' fromuser=$SATELLITE_DB_USER touser=spacewalk file=/tmp/sat.oracleXE.dmp log=/tmp/spacewalk.oracleXE.imp.log ignore=y
$> exit
$> spacewalk-schema-upgrade
$> su - oracle
$> ORACLE_SID=XE; export ORACLE_SID
$> sqlplus 'sys@xe as sysdba' @/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/admin/utlrp.sql
   SQL> quit

$> exit

$> rsync -avz $SATELLITE_IP:/var/satellite/ /var/satellite/

maybe add -H for hardlinks? 

$> chown -R wwwrun.www /var/satellite

$> rsync -a -v -z --ignore-existing $SATELLITE_IP:/var/lib/cobbler/ /var/lib/cobbler/

copy only new files (new kickstart profiles, snippets, trigger, etc.)

#
# cobbler needs also running apache, so let's restart complete spacewalk
#
#$> /etc/init.d/cobblerd restart

$> spacewalk-service restart
$> cobbler sync

To create the install tree

#
# kickstart
#
$> rsync -a -v -z $SATELLITE_IP:/var/lib/rhn/kickstarts /var/lib/rhn/
$> chown -R tomcat.tomcat /var/lib/rhn/kickstarts

#
# nocpulse sync

$> rsync -a -v -z --exclude='libexec/*' $SATELLITE_IP:/var/lib/nocpulse/ /var/lib/nocpulse/
$> chown -R nocpulse.nocpulse /var/lib/nocpulse



$> mkdir -p /root/backup/pub
$> mkdir -p /root/backup/ssl/jabberd
$> mv /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT /root/backup/pub/
$> mv /srv/www/htdocs/pub/rhn-org-trusted-ssl-cert*.rpm /root/backup/pub/
$> mv /root/ssl-build /root/backup/
$> cp /etc/apache2/ssl.crt/spacewalk.crt /root/backup/ssl/
$> cp /etc/apache2/ssl.key/spacewalk.key /root/backup/ssl/
$> cp /etc/pki/spacewalk/jabberd/server.pem /root/backup/ssl/jabberd/

$> rsync -avz --ignore-existing $SATELLITE_IP:/var/www/html/pub/ /srv/www/htdocs/pub/
$> rsync -avz $SATELLITE_IP:/root/ssl-build /root/



Copy the webserver cert and key from satellite to Manager
On satellite look at /etc/httpd/conf.d/ssl.conf for the keys
SSLCertificateFile and SSLCertificateKeyFile

Copy the files given files to the Manager server to 
SSLCertificateFile => /etc/apache2/ssl.crt/spacewalk.crt
SSLCertificateFile => /etc/pki/spacewalk/jabberd/server.pem
SSLCertificateKeyFile => /etc/apache2/ssl.key/spacewalk.key

$> scp root@$SATELLITE_IP:/etc/pki/tls/certs/spacewalk.crt /etc/apache2/ssl.crt/spacewalk.crt
$> scp root@$SATELLITE_IP:/etc/pki/tls/certs/spacewalk.crt /etc/pki/spacewalk/jabberd/server.pem
$> scp root@$SATELLITE_IP:/etc/pki/tls/private/spacewalk.key /etc/apache2/ssl.key/spacewalk.key

You need to remove the extra line from /etc/hosts added 
at the beginning.

Shoutdown the original satellite server and prepare 
the new SUSE Manager host to get the right hostname 
from your network environment.

Reboot now to get the new hostname.

After the host is up and running with the right hostname and ip address
you should re-create the channel metadata:

$> sqlplus "$TEMP_MANAGER_USER/$TEMP_MANAGER_PASS@xe" << 'EOF'
insert into rhnRepoRegenQueue (id, channel_label, client, reason, force, bypass_filters) 
  select rhn_repo_regen_queue_id_seq.nextval, label, 'satmigration', NULL, 'N', 'N' from rhnchannel;
quit
EOF




