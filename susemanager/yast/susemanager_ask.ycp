{
    textdomain "susemanager";

    import "Directory";
    import "Hostname";
    import "FileUtils";
    import "GetInstArgs";
    import "IP";
    import "Popup";
    import "Stage";
    import "Wizard";

    map args = GetInstArgs::argmap ();

    string migration_file	= Directory::tmpdir + "/susemanager_migration";
    boolean migration		= FileUtils::Exists (migration_file);

    if (FileUtils::Exists (migration_file))
    {
	SCR::Execute (.target.remove, migration_file);
    }

    term contents = `HBox (`HSpacing (3), `RadioButtonGroup (`id (`rb), `VBox (

	`Left (`RadioButton (`id (`start), `opt (`notify),
	    // radio button label
	    _("Set up SUSE Manager from scratch"), !migration)),
	`VSpacing (),
	`Left (`RadioButton (`id (`migration), `opt (`notify),
	    // radio button label
	    _("Migrate a Satellite/Spacewalk compatible server"), migration)
	)
    )), `HSpacing (1));


    // help text
    string help_text	= _("<p>Choose if you are setting up SUSE Manager from scratch or migrating to SUSE Manager from a Satellite/Spacewalk compatible server.</p>");

    // dialog caption
    Wizard::SetContents (_("SUSE Manager Setup"), contents, help_text, args["enable_back"]:true, args["enable_next"]:true);

    any ret	= `back;
    while (true)
    {
	ret	= UI::UserInput ();
	if (ret == `back)
	{
	    break;
	}
	if (ret == `abort && Popup::ConfirmAbort(`incomplete))
	{
	    break;
	}
	if (ret == `next)
	{
	    if (UI::QueryWidget (`id (`rb), `CurrentButton) == `migration)
	    {
		y2milestone ("migration chosen");
		SCR::Execute (.target.bash, "/bin/touch " + migration_file);
	    }
	    else
	    {
		y2milestone ("start from scratch chosen");
	    }
	    break;
	}
    }

    return ret;
}
