{
    textdomain "susemanager";

    import "Directory";
    import "FileUtils";
    import "GetInstArgs";
    import "Popup";
    import "Stage";
    import "Wizard";
    import "SpaceCalculation";
    import "Hostname";

    map args = GetInstArgs::argmap ();

    // 2GB
    integer enough_memory = 2000000;

    // 15GB
    integer required_disk_space = 15 * 1024 * 1024;
    integer free_disk_space     = 0;

    map meminfo = (map) SCR::Read (.proc.meminfo);
    //integer totalmem = meminfo["memtotal"]:0 + meminfo["swaptotal"]:0;
    integer totalmem = meminfo["memtotal"]:0;

    list<map> p_info = (list<map>)(SpaceCalculation::GetPartitionInfo());
    foreach( map m, p_info, ``{
        if( m["name"]:"" == "/" ) {
            free_disk_space = m["free"]:0;
            break;
        }
    });

    y2milestone ("Memory: %1, Swap: %2, Total: %3",
      meminfo["memtotal"]:0, meminfo["swaptotal"]:0, totalmem
    );

    // something is wrong
    if (totalmem == nil) {
      // using only RAM if possible
      if (meminfo["memtotal"]:nil != nil) {
        totalmem = meminfo["memtotal"]:0;
        // can't do anything, just assume we enough
      } else {
        totalmem = enough_memory;
      }
    }

    while (true) { // why a loop here?
        // do we have less memory than needed?
        if (totalmem < enough_memory) {
            if ( !Popup::AnyQuestionRichText(_("Not enough memory"), _("SUSE Manager requires 2G of memory to be installed and 8G for good perfomance. If you continue the product will not function correctly."), 40, 10, _("Continue anyway"), _("Exit installation"), `focus_no) )
            {
                if (Popup::ConfirmAbort(`incomplete)) {
                    return `abort;
                }
            }
        }
        if( free_disk_space < required_disk_space ) {
            if ( !Popup::AnyQuestionRichText(_("Not enough disk space"), _("SUSE Manager requires 15G of free disk space to be installed. If you continue the product will not function correctly."), 40, 10, _("Continue anyway"), _("Exit installation"), `focus_no) )
            {
                if (Popup::ConfirmAbort(`incomplete)) {
                    return `abort;
                }
            }
        }
        if( Hostname::CurrentFQ() != tolower(Hostname::CurrentFQ()) ) {
            if ( !Popup::AnyQuestionRichText(_("Illegal Hostname"), _("Your hostname contains upper case characters. The product will not function correctly."), 40, 10, _("Continue anyway"), _("Exit installation"), `focus_no) )
            {
                if (Popup::ConfirmAbort(`incomplete)) {
                    return `abort;
                }
            }
        }
        break; // why a loop here?
    }
    return `auto;
}
