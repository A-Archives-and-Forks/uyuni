<?xml version="1.0"?>

<application acl-mixins="RHN::Access::System">

  <name>Satellite Proxy</name>
  <label>rhn_proxy</label>
  <version>5.4</version>

  <prerequisites>
    <org-channel-family>rhn-proxy</org-channel-family>
    <system-feature>ftr_proxy_capable</system-feature>
    <package-available>spacewalk-proxy-management</package-available>
  </prerequisites>

  <terms-and-conditions url="http://www.redhat.com/licenses" />

  <install>

    <requirements>
      <system-entitlement-possible>provisioning_entitled</system-entitlement-possible>
      <package-available>spacewalk-proxy-management</package-available>
      <client-capable>script.run</client-capable>
      <client-capable>configfiles.deploy</client-capable>
    </requirements>

    <activity description="Check for conflicting packages">
      <method-call class="RHN::ProxyInstall" method="have_package">
        <package>bdb_perl</package>
        <package>ConfigPusher-general</package>
        <package>eventReceivers</package>
        <package>FcntlLock</package>
        <package>httpd</package>
        <package>httpd-suexec</package>
        <package>jabberd</package>
        <package>jabberd-selinux</package>
        <package>libapreq2</package>
        <package>LongLegs</package>
        <package>MessageQueue</package>
        <package>mm</package>
        <package>mod_perl</package>
        <package>mod_python</package>
        <package>mod_ssl</package>
        <package>nocpulse-common</package>
        <package>nocpulse-db-perl</package>
        <package>NOCpulsePlugins</package>
        <package>NPalert</package>
        <package>np-config</package>
        <package>NPusers</package>
        <package>nslogs</package>
        <package>oracle-devel</package>
        <package>oracle-instantclient-selinux</package>
        <package>oracle-nofcontext-selinux</package>
        <package>oracle_perl</package>
        <package>perl-Apache-Admin-Config</package>
        <package>perl-Apache-DBI</package>
        <package>perl-BerkeleyDB</package>
        <package>perl-BSD-Resource</package>
        <package>perl-Class-MethodMaker</package>
        <package>perl-Class-Singleton</package>
        <package>perl-Config-IniFiles</package>
        <package>perl-Crypt-DES</package>
        <package>perl-Crypt-GeneratePassword</package>
        <package>perl-Crypt-SSLeay</package>
        <package>perl-DateTime-Locale</package>
        <package>perl-DateTime</package>
        <package>perl-DateTime-TimeZone</package>
        <package>perl-DBD-Oracle</package>
        <package>perl-Devel-Symdump</package>
        <package>perl-Error</package>
        <package>perl-FreezeThaw</package>
        <package>perl-HTML-TableExtract</package>
        <package>perl-IO-Capture</package>
        <package>perl-IO-Socket-SSL</package>
        <package>perl-IO-stringy</package>
        <package>perl-libapreq2</package>
        <package>perl-Mail-Alias</package>
        <package>perl-MailTools</package>
        <package>perl-MIME-tools</package>
        <package>perl-Net-SNMP</package>
        <package>perl-Net_SSLeay</package>
        <package>perl-Network-IPv4Addr</package>
        <package>perl-NOCpulse-CLAC</package>
        <package>perl-NOCpulse-Debug</package>
        <package>perl-NOCpulse-Gritch</package>
        <package>perl-NOCpulse-Object</package>
        <package>perl-NOCpulse-OracleDB</package>
        <package>perl-NOCpulse-PersistentConnection</package>
        <package>perl-NOCpulse-Probe</package>
        <package>perl-NOCpulse-ProcessPool</package>
        <package>perl-NOCpulse-Scheduler</package>
        <package>perl-NOCpulse-SetID</package>
        <package>perl-NOCpulse-Utils</package>
        <package>perl-Params-Validate</package>
        <package>perl-TimeDate</package>
        <package>perl-XML-Generator</package>
        <package>ProgAGoGo</package>
        <package>python-sgmlop</package>
        <package>rhn-apache</package>
        <package>rhn-base-minimal</package>
        <package>rhn-modperl</package>
        <package>rhn-modpython</package>
        <package>rhn-modssl</package>
        <package>rhn-proxy-branding</package>
        <package>rhns-auth-daemon</package>
        <package>rhns-certs-tools</package>
        <package>rhns</package>
        <package>rhns-proxy-broker</package>
        <package>rhns-proxy-docs</package>
        <package>rhns-proxy-management</package>
        <package>rhns-proxy-monitoring</package>
        <package>rhns-proxy-package-manager</package>
        <package>rhns-proxy-redirect</package>
        <package>rhns-proxy-tools</package>
        <package>rhn-ssl-cert-check</package>
        <package>SatConfig-ApacheDepot</package>
        <package>SatConfig-autokick</package>
        <package>SatConfig-bootstrap</package>
        <package>SatConfig-bootstrap-server</package>
        <package>SatConfig-cluster</package>
        <package>SatConfig-dbsynch</package>
        <package>SatConfig-general</package>
        <package>SatConfig-generator</package>
        <package>SatConfig-installer</package>
        <package>SatConfig-spread</package>
        <package>scdb_accessor_perl</package>
        <package>scdb</package>
        <package>SNMPAlerts</package>
        <package>spacewalk-backend</package>
        <package>spacewalk-base-minimal</package>
        <package>spacewalk-certs-tools</package>
        <package>spacewalk-monitoring-selinux</package>
        <package>spacewalk-proxy-broker</package>
        <package>spacewalk-proxy-common</package>
        <package>spacewalk-proxy-docs</package>
        <package>spacewalk-proxy-html</package>
        <package>spacewalk-proxy-installer</package>
        <package>spacewalk-proxy-management</package>
        <package>spacewalk-proxy-monitoring</package>
        <package>spacewalk-proxy-package-manager</package>
        <package>spacewalk-proxy-redirect</package>
        <package>spacewalk-proxy-selinux</package>
        <package>spacewalk-setup-jabberd</package>
        <package>spacewalk-ssl-cert-check</package>
        <package>SputLite-client</package>
        <package>SputLite-server</package>
        <package>ssl_bridge</package>
        <package>status_log_acceptor</package>
        <package>Time-System</package>
        <package>tsdb_accessor_perl</package>
        <package>tsdb</package>
        <alias>proxy</alias>
      </method-call>
    </activity>

    <collect-data description="Enable Monitoring Proxy"
     acl="org_entitlement(rhn_monitor); package_available(spacewalk-proxy-monitoring); global_config(satellite); global_config(is_monitoring_backend)">

      <header>
Would you like to enable Monitoring Proxy functionality on this system?
      </header>

      <rhn-form name="Enable Monitoring" label="enable_monitoring">
        <widget type="checkbox" name="Enable Monitoring?" label="enable_monitoring" default="1"/>
      </rhn-form>
    </collect-data>

    <collect-data description="Remove Conflicting Packages" acl="session_data_true(have_package_any_of_proxy)">
	<header>
		The following packages conflict with the new installation and will be removed:
	</header>

      <rhn-form name="Remove Conflicting Packages" label="remove_packages">
                <widget type="literal" label="bdb_perl" default="${session.have_package_bdb_perl}" acl="session_data_true(have_package_bdb_perl)" />
                <widget type="literal" label="ConfigPusher-general" default="${session.have_package_ConfigPusher_general}" acl="session_data_true(have_package_ConfigPusher_general)" />
                <widget type="literal" label="eventReceivers" default="${session.have_package_eventReceivers}" acl="session_data_true(have_package_eventReceivers)" />
                <widget type="literal" label="FcntlLock" default="${session.have_package_FcntlLock}" acl="session_data_true(have_package_FcntlLock)" />
                <widget type="literal" label="httpd" default="${session.have_package_httpd}" acl="session_data_true(have_package_httpd)" />
                <widget type="literal" label="httpd-suexec" default="${session.have_package_httpd_suexec}" acl="session_data_true(have_package_httpd_suexec)" />
                <widget type="literal" label="jabberd" default="${session.have_package_jabberd}" acl="session_data_true(have_package_jabberd)" />
                <widget type="literal" label="jabberd-selinux" default="${session.have_package_jabberd_selinux}" acl="session_data_true(have_package_jabberd_selinux)" />
                <widget type="literal" label="libapreq2" default="${session.have_package_libapreq2}" acl="session_data_true(have_package_libapreq2)" />
                <widget type="literal" label="LongLegs" default="${session.have_package_LongLegs}" acl="session_data_true(have_package_LongLegs)" />
                <widget type="literal" label="MessageQueue" default="${session.have_package_MessageQueue}" acl="session_data_true(have_package_MessageQueue)" />
                <widget type="literal" label="mm" default="${session.have_package_mm}" acl="session_data_true(have_package_mm)" />
                <widget type="literal" label="mod_perl" default="${session.have_package_mod_perl}" acl="session_data_true(have_package_mod_perl)" />
                <widget type="literal" label="mod_python" default="${session.have_package_mod_python}" acl="session_data_true(have_package_mod_python)" />
                <widget type="literal" label="mod_ssl" default="${session.have_package_mod_ssl}" acl="session_data_true(have_package_mod_ssl)" />
                <widget type="literal" label="nocpulse-common" default="${session.have_package_nocpulse_common}" acl="session_data_true(have_package_nocpulse_common)" />
                <widget type="literal" label="nocpulse-db-perl" default="${session.have_package_nocpulse_db_perl}" acl="session_data_true(have_package_nocpulse_db_perl)" />
                <widget type="literal" label="NOCpulsePlugins" default="${session.have_package_NOCpulsePlugins}" acl="session_data_true(have_package_NOCpulsePlugins)" />
                <widget type="literal" label="NPalert" default="${session.have_package_NPalert}" acl="session_data_true(have_package_NPalert)" />
                <widget type="literal" label="np-config" default="${session.have_package_np_config}" acl="session_data_true(have_package_np_config)" />
                <widget type="literal" label="NPusers" default="${session.have_package_NPusers}" acl="session_data_true(have_package_NPusers)" />
                <widget type="literal" label="nslogs" default="${session.have_package_nslogs}" acl="session_data_true(have_package_nslogs)" />
                <widget type="literal" label="oracle-devel" default="${session.have_package_oracle_devel}" acl="session_data_true(have_package_oracle_devel)" />
                <widget type="literal" label="oracle-instantclient-selinux" default="${session.have_package_oracle_instantclient_selinux}" acl="session_data_true(have_package_oracle_instantclient_selinux)" />
                <widget type="literal" label="oracle-nofcontext-selinux" default="${session.have_package_oracle_nofcontext_selinux}" acl="session_data_true(have_package_oracle_nofcontext_selinux)" />
                <widget type="literal" label="oracle_perl" default="${session.have_package_oracle_perl}" acl="session_data_true(have_package_oracle_perl)" />
                <widget type="literal" label="perl-Apache-Admin-Config" default="${session.have_package_perl_Apache_Admin_Config}" acl="session_data_true(have_package_perl_Apache_Admin_Config)" />
                <widget type="literal" label="perl-Apache-DBI" default="${session.have_package_perl_Apache_DBI}" acl="session_data_true(have_package_perl_Apache_DBI)" />
                <widget type="literal" label="perl-BerkeleyDB" default="${session.have_package_perl_BerkeleyDB}" acl="session_data_true(have_package_perl_BerkeleyDB)" />
                <widget type="literal" label="perl-BSD-Resource" default="${session.have_package_perl_BSD_Resource}" acl="session_data_true(have_package_perl_BSD_Resource)" />
                <widget type="literal" label="perl-Class-MethodMaker" default="${session.have_package_perl_Class_MethodMaker}" acl="session_data_true(have_package_perl_Class_MethodMaker)" />
                <widget type="literal" label="perl-Class-Singleton" default="${session.have_package_perl_Class_Singleton}" acl="session_data_true(have_package_perl_Class_Singleton)" />
                <widget type="literal" label="perl-Config-IniFiles" default="${session.have_package_perl_Config_IniFiles}" acl="session_data_true(have_package_perl_Config_IniFiles)" />
                <widget type="literal" label="perl-Crypt-DES" default="${session.have_package_perl_Crypt_DES}" acl="session_data_true(have_package_perl_Crypt_DES)" />
                <widget type="literal" label="perl-Crypt-GeneratePassword" default="${session.have_package_perl_Crypt_GeneratePassword}" acl="session_data_true(have_package_perl_Crypt_GeneratePassword)" />
                <widget type="literal" label="perl-Crypt-SSLeay" default="${session.have_package_perl_Crypt_SSLeay}" acl="session_data_true(have_package_perl_Crypt_SSLeay)" />
                <widget type="literal" label="perl-DateTime" default="${session.have_package_perl_DateTime}" acl="session_data_true(have_package_perl_DateTime)" />
                <widget type="literal" label="perl-DateTime-Locale" default="${session.have_package_perl_DateTime_Locale}" acl="session_data_true(have_package_perl_DateTime_Locale)" />
                <widget type="literal" label="perl-DateTime-TimeZone" default="${session.have_package_perl_DateTime_TimeZone}" acl="session_data_true(have_package_perl_DateTime_TimeZone)" />
                <widget type="literal" label="perl-DBD-Oracle" default="${session.have_package_perl_DBD_Oracle}" acl="session_data_true(have_package_perl_DBD_Oracle)" />
                <widget type="literal" label="perl-Devel-Symdump" default="${session.have_package_perl_Devel_Symdump}" acl="session_data_true(have_package_perl_Devel_Symdump)" />
                <widget type="literal" label="perl-Error" default="${session.have_package_perl_Error}" acl="session_data_true(have_package_perl_Error)" />
                <widget type="literal" label="perl-FreezeThaw" default="${session.have_package_perl_FreezeThaw}" acl="session_data_true(have_package_perl_FreezeThaw)" />
                <widget type="literal" label="perl-HTML-TableExtract" default="${session.have_package_perl_HTML_TableExtract}" acl="session_data_true(have_package_perl_HTML_TableExtract)" />
                <widget type="literal" label="perl-IO-Capture" default="${session.have_package_perl_IO_Capture}" acl="session_data_true(have_package_perl_IO_Capture)" />
                <widget type="literal" label="perl-IO-Socket-SSL" default="${session.have_package_perl_IO_Socket_SSL}" acl="session_data_true(have_package_perl_IO_Socket_SSL)" />
                <widget type="literal" label="perl-IO-stringy" default="${session.have_package_perl_IO_stringy}" acl="session_data_true(have_package_perl_IO_stringy)" />
                <widget type="literal" label="perl-libapreq2" default="${session.have_package_perl_libapreq2}" acl="session_data_true(have_package_perl_libapreq2)" />
                <widget type="literal" label="perl-Mail-Alias" default="${session.have_package_perl_Mail_Alias}" acl="session_data_true(have_package_perl_Mail_Alias)" />
                <widget type="literal" label="perl-MailTools" default="${session.have_package_perl_MailTools}" acl="session_data_true(have_package_perl_MailTools)" />
                <widget type="literal" label="perl-MIME-tools" default="${session.have_package_perl_MIME_tools}" acl="session_data_true(have_package_perl_MIME_tools)" />
                <widget type="literal" label="perl-Net-SNMP" default="${session.have_package_perl_Net_SNMP}" acl="session_data_true(have_package_perl_Net_SNMP)" />
                <widget type="literal" label="perl-Net_SSLeay" default="${session.have_package_perl_Net_SSLeay}" acl="session_data_true(have_package_perl_Net_SSLeay)" />
                <widget type="literal" label="perl-Network-IPv4Addr" default="${session.have_package_perl_Network_IPv4Addr}" acl="session_data_true(have_package_perl_Network_IPv4Addr)" />
                <widget type="literal" label="perl-NOCpulse-CLAC" default="${session.have_package_perl_NOCpulse_CLAC}" acl="session_data_true(have_package_perl_NOCpulse_CLAC)" />
                <widget type="literal" label="perl-NOCpulse-Debug" default="${session.have_package_perl_NOCpulse_Debug}" acl="session_data_true(have_package_perl_NOCpulse_Debug)" />
                <widget type="literal" label="perl-NOCpulse-Gritch" default="${session.have_package_perl_NOCpulse_Gritch}" acl="session_data_true(have_package_perl_NOCpulse_Gritch)" />
                <widget type="literal" label="perl-NOCpulse-Object" default="${session.have_package_perl_NOCpulse_Object}" acl="session_data_true(have_package_perl_NOCpulse_Object)" />
                <widget type="literal" label="perl-NOCpulse-OracleDB" default="${session.have_package_perl_NOCpulse_OracleDB}" acl="session_data_true(have_package_perl_NOCpulse_OracleDB)" />
                <widget type="literal" label="perl-NOCpulse-PersistentConnection" default="${session.have_package_perl_NOCpulse_PersistentConnection}" acl="session_data_true(have_package_perl_NOCpulse_PersistentConnection)" />
                <widget type="literal" label="perl-NOCpulse-Probe" default="${session.have_package_perl_NOCpulse_Probe}" acl="session_data_true(have_package_perl_NOCpulse_Probe)" />
                <widget type="literal" label="perl-NOCpulse-ProcessPool" default="${session.have_package_perl_NOCpulse_ProcessPool}" acl="session_data_true(have_package_perl_NOCpulse_ProcessPool)" />
                <widget type="literal" label="perl-NOCpulse-Scheduler" default="${session.have_package_perl_NOCpulse_Scheduler}" acl="session_data_true(have_package_perl_NOCpulse_Scheduler)" />
                <widget type="literal" label="perl-NOCpulse-SetID" default="${session.have_package_perl_NOCpulse_SetID}" acl="session_data_true(have_package_perl_NOCpulse_SetID)" />
                <widget type="literal" label="perl-NOCpulse-Utils" default="${session.have_package_perl_NOCpulse_Utils}" acl="session_data_true(have_package_perl_NOCpulse_Utils)" />
                <widget type="literal" label="perl-Params-Validate" default="${session.have_package_perl_Params_Validate}" acl="session_data_true(have_package_perl_Params_Validate)" />
                <widget type="literal" label="perl-TimeDate" default="${session.have_package_perl_TimeDate}" acl="session_data_true(have_package_perl_TimeDate)" />
                <widget type="literal" label="perl-XML-Generator" default="${session.have_package_perl_XML_Generator}" acl="session_data_true(have_package_perl_XML_Generator)" />
                <widget type="literal" label="ProgAGoGo" default="${session.have_package_ProgAGoGo}" acl="session_data_true(have_package_ProgAGoGo)" />
                <widget type="literal" label="python-sgmlop" default="${session.have_package_python_sgmlop}" acl="session_data_true(have_package_python_sgmlop)" />
                <widget type="literal" label="rhn-apache" default="${session.have_package_rhn_apache}" acl="session_data_true(have_package_rhn_apache)" />
                <widget type="literal" label="rhn-base-minimal" default="${session.have_package_rhn_base_minimal}" acl="session_data_true(have_package_rhn_base_minimal)" />
                <widget type="literal" label="rhn-modperl" default="${session.have_package_rhn_modperl}" acl="session_data_true(have_package_rhn_modperl)" />
                <widget type="literal" label="rhn-modpython" default="${session.have_package_rhn_modpython}" acl="session_data_true(have_package_rhn_modpython)" />
                <widget type="literal" label="rhn-modssl" default="${session.have_package_rhn_modssl}" acl="session_data_true(have_package_rhn_modssl)" />
                <widget type="literal" label="rhn-proxy-branding" default="${session.have_package_rhn_proxy_branding}" acl="session_data_true(have_package_rhn_proxy_branding)" />
                <widget type="literal" label="rhns-auth-daemon" default="${session.have_package_rhns_auth_daemon}" acl="session_data_true(have_package_rhns_auth_daemon)" />
                <widget type="literal" label="rhns-certs-tools" default="${session.have_package_rhns_certs_tools}" acl="session_data_true(have_package_rhns_certs_tools)" />
                <widget type="literal" label="rhns" default="${session.have_package_rhns}" acl="session_data_true(have_package_rhns)" />
                <widget type="literal" label="rhns-proxy-broker" default="${session.have_package_rhns_proxy_broker}" acl="session_data_true(have_package_rhns_proxy_broker)" />
                <widget type="literal" label="rhns-proxy-docs" default="${session.have_package_rhns_proxy_docs}" acl="session_data_true(have_package_rhns_proxy_docs)" />
                <widget type="literal" label="rhns-proxy-management" default="${session.have_package_rhns_proxy_management}" acl="session_data_true(have_package_rhns_proxy_management)" />
                <widget type="literal" label="rhns-proxy-monitoring" default="${session.have_package_rhns_proxy_monitoring}" acl="session_data_true(have_package_rhns_proxy_monitoring)" />
                <widget type="literal" label="rhns-proxy-package-manager" default="${session.have_package_rhns_proxy_package_manager}" acl="session_data_true(have_package_rhns_proxy_package_manager)" />
                <widget type="literal" label="rhns-proxy-redirect" default="${session.have_package_rhns_proxy_redirect}" acl="session_data_true(have_package_rhns_proxy_redirect)" />
                <widget type="literal" label="rhns-proxy-tools" default="${session.have_package_rhns_proxy_tools}" acl="session_data_true(have_package_rhns_proxy_tools)" />
                <widget type="literal" label="rhn-ssl-cert-check" default="${session.have_package_rhn_ssl_cert_check}" acl="session_data_true(have_package_rhn_ssl_cert_check)" />
                <widget type="literal" label="SatConfig-ApacheDepot" default="${session.have_package_SatConfig_ApacheDepot}" acl="session_data_true(have_package_SatConfig_ApacheDepot)" />
                <widget type="literal" label="SatConfig-autokick" default="${session.have_package_SatConfig_autokick}" acl="session_data_true(have_package_SatConfig_autokick)" />
                <widget type="literal" label="SatConfig-bootstrap" default="${session.have_package_SatConfig_bootstrap}" acl="session_data_true(have_package_SatConfig_bootstrap)" />
                <widget type="literal" label="SatConfig-bootstrap-server" default="${session.have_package_SatConfig_bootstrap_server}" acl="session_data_true(have_package_SatConfig_bootstrap_server)" />
                <widget type="literal" label="SatConfig-cluster" default="${session.have_package_SatConfig_cluster}" acl="session_data_true(have_package_SatConfig_cluster)" />
                <widget type="literal" label="SatConfig-dbsynch" default="${session.have_package_SatConfig_dbsynch}" acl="session_data_true(have_package_SatConfig_dbsynch)" />
                <widget type="literal" label="SatConfig-general" default="${session.have_package_SatConfig_general}" acl="session_data_true(have_package_SatConfig_general)" />
                <widget type="literal" label="SatConfig-generator" default="${session.have_package_SatConfig_generator}" acl="session_data_true(have_package_SatConfig_generator)" />
                <widget type="literal" label="SatConfig-installer" default="${session.have_package_SatConfig_installer}" acl="session_data_true(have_package_SatConfig_installer)" />
                <widget type="literal" label="SatConfig-spread" default="${session.have_package_SatConfig_spread}" acl="session_data_true(have_package_SatConfig_spread)" />
                <widget type="literal" label="scdb_accessor_perl" default="${session.have_package_scdb_accessor_perl}" acl="session_data_true(have_package_scdb_accessor_perl)" />
                <widget type="literal" label="scdb" default="${session.have_package_scdb}" acl="session_data_true(have_package_scdb)" />
                <widget type="literal" label="SNMPAlerts" default="${session.have_package_SNMPAlerts}" acl="session_data_true(have_package_SNMPAlerts)" />
                <widget type="literal" label="spacewalk-backend" default="${session.have_package_spacewalk_backend}" acl="session_data_true(have_package_spacewalk_backend)" />
                <widget type="literal" label="spacewalk-base-minimal" default="${session.have_package_spacewalk_base_minimal}" acl="session_data_true(have_package_spacewalk_base_minimal)" />
                <widget type="literal" label="spacewalk-certs-tools" default="${session.have_package_spacewalk_certs_tools}" acl="session_data_true(have_package_spacewalk_certs_tools)" />
                <widget type="literal" label="spacewalk-monitoring-selinux" default="${session.have_package_spacewalk_monitoring_selinux}" acl="session_data_true(have_package_spacewalk_monitoring_selinux)" />
                <widget type="literal" label="spacewalk-proxy-broker" default="${session.have_package_spacewalk_proxy_broker}" acl="session_data_true(have_package_spacewalk_proxy_broker)" />
                <widget type="literal" label="spacewalk-proxy-common" default="${session.have_package_spacewalk_proxy_common}" acl="session_data_true(have_package_spacewalk_proxy_common)" />
                <widget type="literal" label="spacewalk-proxy-docs" default="${session.have_package_spacewalk_proxy_docs}" acl="session_data_true(have_package_spacewalk_proxy_docs)" />
                <widget type="literal" label="spacewalk-proxy-html" default="${session.have_package_spacewalk_proxy_html}" acl="session_data_true(have_package_spacewalk_proxy_html)" />
                <widget type="literal" label="spacewalk-proxy-installer" default="${session.have_package_spacewalk_installer}" acl="session_data_true(have_package_spacewalk_proxy_installer)" />
                <widget type="literal" label="spacewalk-proxy-management" default="${session.have_package_spacewalk_proxy_management}" acl="session_data_true(have_package_spacewalk_proxy_management)" />
                <widget type="literal" label="spacewalk-proxy-monitoring" default="${session.have_package_spacewalk_proxy_monitoring}" acl="session_data_true(have_package_spacewalk_proxy_monitoring)" />
                <widget type="literal" label="spacewalk-proxy-package-manager" default="${session.have_package_spacewalk_proxy_package_manager}" acl="session_data_true(have_package_spacewalk_proxy_package_manager)" />
                <widget type="literal" label="spacewalk-proxy-redirect" default="${session.have_package_spacewalk_proxy_redirect}" acl="session_data_true(have_package_spacewalk_proxy_redirect)" />
                <widget type="literal" label="spacewalk-proxy-selinux" default="${session.have_package_spacewalk_proxy_selinux}" acl="session_data_true(have_package_spacewalk_proxy_selinux)" />
                <widget type="literal" label="spacewalk-setup-jabberd" default="${session.have_package_spacewalk_setup_jabberd}" acl="session_data_true(have_package_spacewalk_setup_jabberd)" />
                <widget type="literal" label="spacewalk-ssl-cert-check" default="${session.have_package_spacewalk_ssl_cert_check}" acl="session_data_true(have_package_spacewalk_ssl_cert_check)" />
                <widget type="literal" label="SputLite-client" default="${session.have_package_SputLite_client}" acl="session_data_true(have_package_SputLite_client)" />
                <widget type="literal" label="SputLite-server" default="${session.have_package_SputLite_server}" acl="session_data_true(have_package_SputLite_server)" />
                <widget type="literal" label="ssl_bridge" default="${session.have_package_ssl_bridge}" acl="session_data_true(have_package_ssl_bridge)" />
                <widget type="literal" label="status_log_acceptor" default="${session.have_package_status_log_acceptor}" acl="session_data_true(have_package_status_log_acceptor)" />
                <widget type="literal" label="Time-System" default="${session.have_package_Time_System}" acl="session_data_true(have_package_Time_System)" />
                <widget type="literal" label="tsdb_accessor_perl" default="${session.have_package_tsdb_accessor_perl}" acl="session_data_true(have_package_tsdb_accessor_perl)" />
                <widget type="literal" label="tsdb" default="${session.have_package_tsdb}" acl="session_data_true(have_package_tsdb)" />
	</rhn-form>
    </collect-data>

    <collect-data description="Configure ${app.name} Server">

      <header>
<p>
 Configure your ${app.name} Server below.  The Administrator Email
 Address is the address to which system status messages are sent.  For
 the ${app.name} Server to function properly, the ${app.name} Hostname
 must be set to the system's fully qualified domain name.
</p>

<p>
 The Satellite Parent Server is the hostname of the server this Proxy
 connects to.  Depending on your configuration, it could be the
 central Satellite Servers, your organization's Satellite Server, or
 another ${app.name} Server.  If this ${app.name} will be connecting
 through an HTTP proxy, populate the related fields.
</p>

<p>
 If you choose to enable Secure Sockets Layer (SSL), this Satellite Proxy
 will use SSL to connect to the Satellite Parent Server.  Regardless of
 whether you enable SSL for the connection to the Satellite Parent Server,
 you will be prompted to generate an SSL certificate on the next page.
 This SSL certificate will allow client systems to connect to this
 ${app.name} securely.  Refer to the RHN Proxy Installation Guide for
 more information.
</p>
<p>
 When using an HTTP Proxy Server, use the format "servername:port" to specify the server.  For example: "proxy-server.corp.com:8888".
</p>
      </header>

      <rhn-form name="Configure Proxy" label="configure_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Administrator Email Address" label="traceback_mail" size="40" default="${user.email}">
          <require valid-email="1" />
        </widget>
        <widget type="text" name="${app.name} Hostname" label="hostname" size="40" default="${system.guess_hostname}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
        </widget>
        <widget type="text" name="Satellite Parent Server" label="rhn_parent" size="40" default="${system.guess_rhn_parent}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
	</widget>
        <widget type="text" name="HTTP Proxy Server" label="http_proxy" size="30">
          <filter type="text" />
	  <require fqdn-and-port="1"/>
        </widget>
        <widget type="text" name="HTTP Proxy Username" label="http_proxy_username" size="10">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Password" label="http_proxy_password" size="10">
          <filter type="text" />
        </widget>
        <widget type="checkbox" name="Enable SSL?" label="enable_ssl" default="1" checked="1"
                acl="global_config(ssl_available) or not global_config(satellite)"/>
        <widget type="literal" label="SSL" default="SSL is not enabled on this Satellite."
		acl="global_config(satellite); not global_config(ssl_available)"/>
        <widget type="checkbox" name="Enable Push?" label="enable_osad" default="1" checked="1"
                acl="global_config(satellite); global_config(ssl_available)"/>
      </rhn-form>

    </collect-data>

    <collect-data description="Configure SSL" acl="global_config(ssl_available); global_config(satellite)">
      <header>
        Enter your CA cert password and other SSL configuration
        information here.  This information will be used to generate
        the server certificate used by the proxy server to communicate
        via SSL.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />

        <widget type="password" name="CA Cert Password" label="ca_cert_password" size="15">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="Organization" label="org" size="24">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="Organizational Unit" label="org-unit" size="24">
          <require max-length="128"/>
	</widget>

        <widget type="text" name="Email Address" label="email" size="40" default="${session.traceback_mail}">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="text" name="City" label="city" size="16">
          <require max-length="128"/>
          <require response="1"/>
        </widget>

        <widget type="text" name="State" label="state" size="16">
          <require max-length="128"/>
          <require response="1"/>
	</widget>

        <widget type="select" name="Country" label="country" size="1" default="US" populate_options="RHN::SatInstall->valid_cert_countries">
          <require response="1"/>
        </widget>

        <widget type="text" name="Server cert Expiration (years)" label="cert-expiration" size="3" default="5">
          <require max-length="3"/>
          <require response="1"/>
	</widget>

        <widget type="hidden" label="use_ssl" default="1" />
      </rhn-form>
    </collect-data>

    <collect-data description="Skip SSL Configuration"
		  acl="not global_config(ssl_available); global_config(satellite)">
      <header>
        You do not have SSL enabled for your Satellite Server.
        Therefore, SSL will not be available for this Satellite Proxy.  SSL
        is a critical part of the security model of Satellite.  If you wish
        to configure SSL at a later time, see the RHN
        Installation Guide.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="hidden" label="ca_chain" default="/usr/share/rhn/RHNS-CA-CERT" />
      </rhn-form>
    </collect-data>

    <collect-data description="Configure SSL" acl="not global_config(satellite)">
      <header>
        In order to configure SSL on your ${app.name}, you will need
        to generate a CA certificate and an SSL key pair.  See the
        <a href="/rhn/help/proxy/rhn530/en-US/s1-installation-install-config.jsp">RHN Proxy
        Installation Guide </a> for more details.  After you have
        generated the SSL key, you will need to upload the resulting
        tar file containing the certificate files using the form
        below.  If the SSL CA certificate included in the tar file does
        not already exist in your org's <a
        href="/rhn/keys/CryptoKeysList.do" target="_new">list of SSL
        keys</a>, it will be added to that list.
      </header>

      <rhn-form name="Configure SSL" label="configure_ssl">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
	<widget type="file" name="SSL key files (tar)" label="ssl_key_tar">
	  <require response="1"/>
	</widget>
        <widget type="hidden" label="use_ssl" default="1" />
      </rhn-form>
    </collect-data>

    <activity description="Lookup Parent IP Address" 
	      acl="session_data_true(enable_monitoring)">
      <method-call class="RHN::ProxyInstall" method="load_ip_address" />
    </activity>

    <collect-data description="Configure Satellite Monitoring Proxy" acl="session_data_true(enable_monitoring)">

      <header>
        Configure the Monitoring aspects of your ${app.name} below.
      </header>

      <rhn-form name="Configure Monitoring Proxy" label="configure_monitoring_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Satellite Parent Server Hostname" label="rhn_monitoring_parent" size="40" default="${session.rhn_parent}">
          <require response="1"/>
	  <require fqdn="1"/>
          <filter type="text" />
	</widget>
        <widget type="text" name="Satellite Parent Server IP Address" label="rhn_monitoring_parent_ip" size="15" default="${session.rhn_parent_ip}">
          <require response="1"/>
          <require valid-ip="1"/>
          <filter type="text" />
	</widget>
        <widget type="hidden" label="enable_monitoring_scout" default="1"/>
      </rhn-form>

    </collect-data>

    <activity description="Provisioning entitle system">
      <set-system-entitlement>provisioning_entitled</set-system-entitlement>
    </activity>

    <activity description="Create ${app.name} Config Channel for system">
      <create-config-channel>
        <org-id>${user.org_id}</org-id>
        <type>normal</type>
        <name>${app.name} Config Channel for ${system.name}</name>
        <label>rhn_proxy_config_${system.id}</label>
        <description>This config channel is for the ${app.name} application running on ${system.name} (${system.id})</description>
      </create-config-channel>
    </activity>

    <activity description="Subscribe to ${app.name} Config Channel">
      <subscribe-system-to-config-channel channel-label="rhn_proxy_config_${system.id}" order="first"/>
    </activity>

    <activity description="Import SSL server cert into Config Channel" 
	      acl="not global_config(satellite)">
      <method-call class="RHN::ProxyInstall" method="import_ssl_cert">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <cert-tar>${session.ssl_key_tar}</cert-tar>
      </method-call>
    </activity>

    <activity description="Generate SSL server cert" acl="global_config(ssl_available);global_config(satellite)">
      <method-call class="RHN::ProxyInstall" method="generate_ssl_cert">
        <hostname>${session.hostname}</hostname>
        <ca-cert-password>${session.ca_cert_password}</ca-cert-password>
        <org>${session.org}</org>
        <org-unit>${session.org-unit}</org-unit>
        <email>${session.email}</email>
        <city>${session.city}</city>
        <state>${session.state}</state>
        <country>${session.country}</country>
        <cert-expiration>${session.cert-expiration}</cert-expiration>
	<target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
	      <version>${app.version}</version>
      </method-call>
    </activity>

    <activity description="Create SatCluster record for Satellite Monitoring Proxy" acl="session_data_true(enable_monitoring)">
      <method-call class="RHN::ProxyInstall" method="create_sat_cluster_record">
        <customer-id>${user.org_id}</customer-id>
        <description>${app.name} ${system.name} (${system.id})</description>
	<last-update-user>installer</last-update-user>
      </method-call>
    </activity>

    <activity description="Generate /etc/rhn/rhn.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/rhn.conf"
			    template="rhn.conf" mode="640" username="root" groupname="apache"/>
    </activity>

    <activity description="Generate /etc/rhn/cluster.ini config file" acl="session_data_true(enable_monitoring)">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/cluster.ini"
			    template="cluster.ini" mode="644" username="root" groupname="root"/>
    </activity>

    <activity description="Generate /etc/squid/squid.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/squid/squid.conf"
			    template="squid.conf" mode="755"/>
    </activity>

    <activity description="Generate /etc/httpd/conf.d/rhn_proxy.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/httpd/conf.d/rhn_proxy.conf"
			    template="httpd/rhn_proxy.conf" mode="640" username="root" groupname="apache"/>
    </activity>

    <activity description="Generate /etc/httpd/conf.d/cobbler-proxy.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/httpd/conf.d/cobbler-proxy.conf"
                           template="httpd/cobbler-proxy.conf" mode="640" username="root" groupname="apache"/>
    </activity>

    <activity description="Generate /etc/httpd/conf.d/ssl.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/httpd/conf.d/ssl.conf"
			    template="httpd/ssl.conf" mode="644" username="root" groupname="root"/>
    </activity>

    <activity description="Activate the ${app.name}">
      <method-call class="RHN::ProxyInstall" method="activate_proxy">
        <version>${app.version}</version>
      </method-call>
    </activity>

    <schedule-actions description="Schedule ${app.name} install">
      <remove-packages>
        <rpm>python-xmlrpc</rpm>
      </remove-packages>

      <run-script acl="session_data_true(have_package_any_of_proxy)">
        <action-name>Remove conflicting proxy packages</action-name>
        <script>
#!/bin/sh
PACKAGES=`for package in ${session.packages_list_proxy}; do
  rpm -q $package >/dev/null &amp;&amp; echo $package; done`
if [ -n "$PACKAGES" ]; then
  rpm -e $PACKAGES
fi
        </script>
      </run-script>

      <install-packages acl="not session_data_true(have_package_any_of_proxy)">
        <rpm>spacewalk-proxy-management</rpm>
        <rpm acl="session_data_true(enable_monitoring)">spacewalk-proxy-monitoring</rpm>
      </install-packages>

      <install-packages acl="session_data_true(have_package_any_of_proxy)">
	<force>1</force>
        <rpm>spacewalk-proxy-management</rpm>
        <rpm acl="session_data_true(enable_monitoring)">spacewalk-proxy-monitoring</rpm>
      </install-packages>

      <run-script acl="global_config(ssl_available);session_data_true(enable_osad)">
        <action-name>Generate jabberd config file</action-name>
          <script>
#!/bin/sh
/usr/bin/spacewalk-setup-jabberd --macros "hostname:${session.hostname}"
          </script>
        </run-script>

      <deploy-configs>
        <action-name>Deploy Configuration</action-name>
        <configfile>/etc/rhn/rhn.conf</configfile>
        <configfile acl="session_data_true(enable_monitoring)">/etc/rhn/cluster.ini</configfile>
        <configfile>/etc/squid/squid.conf</configfile>
        <configfile>/etc/httpd/conf.d/rhn_proxy.conf</configfile>
        <configfile>/etc/httpd/conf.d/cobbler-proxy.conf</configfile>
	<configfile>/etc/httpd/conf.d/ssl.conf</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.crt/server.crt</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.csr/server.csr</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/etc/httpd/conf/ssl.key/server.key</configfile>
        <configfile acl="session_data_true(org_ssl_cert)">/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT</configfile>
        <configfile acl="global_config(ssl_available) or not global_config(satellite)">/var/www/html/pub/RHN-ORG-TRUSTED-SSL-CERT</configfile>
        <configfile acl="session_data_true(ca_rpm)">${session.ca_rpm}</configfile>
        <configfile acl="global_config(ssl_available);session_data_true(enable_osad)">/etc/jabberd/server.pem</configfile>
      </deploy-configs> 

      <run-script>
        <action-name>Allow Proxy service to read Satellite Configuration</action-name>
        <script>
#!/bin/sh
chown root.apache /etc/sysconfig/rhn/systemid
chmod 640 /etc/sysconfig/rhn/systemid
	</script>
      </run-script>

      <run-script acl="session_data_true(enable_monitoring)">
        <action-name>Enable ${app.name} services</action-name>
        <script>
#!/bin/sh
for service in jabberd squid httpd MonitoringScout; do
  /sbin/chkconfig --add $service 
  if [ "$1" = "1" ] ; then  # first install
      /sbin/chkconfig --level 345 $service on
  fi
done
        </script>
     </run-script>

      <run-script acl="not session_data_true(enable_monitoring)">
        <action-name>Enable ${app.name} services</action-name>
        <script>
#!/bin/sh
for service in jabberd squid httpd; do
  /sbin/chkconfig --add $service
  if [ "$1" = "1" ] ; then  # first install
      /sbin/chkconfig --level 345 $service on
  fi
done
  </script>

      </run-script>

      <run-script>
        <action-name>Start ${app.name}</action-name>
        <script>
#!/bin/sh
/usr/sbin/rhn-proxy restart
  </script>
      </run-script>
    </schedule-actions>

    <redirect save-session="1">/network/systems/details/proxy/install_progress.pxt?sid=${system.id}&amp;version=${app.version}</redirect>

  </install>

  <install-progress acl="action_pending_named(Start ${app.name}) or last_action_attempt_failed(Start ${app.name})">

    <action-status description="Install progress">
      <header>
You are installing ${app.name} on this system.  Below is the list of actions for this installation.
      </header>

      <inprogress>
        Once these actions are complete, your ${app.name} should be available for use.
      </inprogress>

      <complete>
        The installation is complete.
      </complete>

      <failed>
        The installation has failed.  Click on the failed action for
        more details, resolve the error that prevented installation,
        and 
<a href="/network/systems/details/proxy/index.pxt?sid=${system.id}&amp;version=${app.version}">try your installation again</a>.
        Or, you can
<a href="/network/systems/details/proxy.pxt?sid=${system.id}&amp;pxt_trap=rhn:cancel_scheduled_proxy_install_cb">cancel this installation process</a>.
      </failed>

      <target-action name="Start ${app.name}" show-chain="1"/>
    </action-status>

  </install-progress>

  <configure>
    <activity description="Create ${app.name} Config Channel for system if does not already exist">
      <create-config-channel>
        <org-id>${user.org_id}</org-id>
        <type>normal</type>
        <name>${app.name} Config Channel for ${system.name}</name>
        <label>rhn_proxy_config_${system.id}</label>
        <description>This config channel is for the ${app.name} application running on ${system.name} (${system.id})</description>
      </create-config-channel>
    </activity>

    <activity description="Subscribe to ${app.name} Config Channel">
      <subscribe-system-to-config-channel channel-label="rhn_proxy_config_${system.id}" order="first"/>
    </activity>

    <activity description="Generate /etc/rhn/rhn.conf config file">
      <generate-config-file target-config-channel="rhn_proxy_config_${system.id}" path="/etc/rhn/rhn.conf"
			    template="rhn.conf" mode="640" username="root" groupname="apache" new_only="1"/>
    </activity>


    <activity description="Load current configuration">
      <method-call class="RHN::ProxyInstall" method="load_configfile_into_session">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <target-config-file>/etc/rhn/rhn.conf</target-config-file>
      </method-call>
    </activity>

    <collect-data description="Configure ${app.name}">

      <header>
<p>
Configure your ${app.name} below.  The Administrator Email Address is
the address to which system status e-mail will be sent.  Please note
that if you have modified the configuration locally on the proxy
without importing those changes into the Proxy Config Channel for this
system, this action will overwrite those changes.
</p>
<p>
Also, configuration changes here will not update the configuration for
the up2date client.  Only the ${app.name} application will be
configured.  For instance, if you want this system to connect through
an HTTP proxy, you will need to configure the ${app.name} software
here, and configure the up2date client separately.
</p>
<p>
 When using an HTTP Proxy Server, use the format "servername:port" to specify the server.  For example: "proxy-server.corp.com:8888".
 </p>
      </header>

      <rhn-form name="Configure Proxy" label="configure_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="text" name="Administrator Email Address" label="traceback_mail" size="40" default="${session.traceback_mail}">
          <require valid-email="1" />
        </widget>
        <widget type="text" name="HTTP Proxy Server" label="proxy.http_proxy" size="30" default="${session.proxy.http_proxy}">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Username" label="proxy.http_proxy_username" size="10" default="${session.proxy.http_proxy_username}">
          <filter type="text" />
        </widget>
        <widget type="text" name="HTTP Proxy Password" label="proxy.http_proxy_password" size="10" default="${session.proxy.http_proxy_password}">
          <filter type="text" />
        </widget>
      </rhn-form>

    </collect-data>

    <activity description="Update ${app.name} Configuration">
      <method-call class="RHN::ProxyInstall" method="update_configfile_from_session">
        <target-config-channel>rhn_proxy_config_${system.id}</target-config-channel>
        <target-config-file>/etc/rhn/rhn.conf</target-config-file>
      </method-call>
    </activity>

    <schedule-actions description="Schedule ${app.name} install">

      <deploy-configs>
        <configfile>/etc/rhn/rhn.conf</configfile>
      </deploy-configs> 

      <run-script>
        <action-name>Restart ${app.name}</action-name>
        <script>
#!/bin/sh
/usr/sbin/rhn-proxy restart
  </script>
      </run-script>

    </schedule-actions>

    <collect-data description="Configuration update scheduled" no-cancel="1">
      <header>
Reconfiguration actions for ${app.name} ${app.version} have been scheduled.
      </header>

      <rhn-form name="Installation Complete" label="install_complete">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="hidden" label="continue_redir" default="/rhn/systems/details/Overview.do" />
      </rhn-form>

    </collect-data>

  </configure>

  <remove>

    <collect-data description="Deactivate ${app.name}">

      <header>
You can deactivate your ${app.name}.  The ${app.name} services on the system
will be stopped, and it will not show up as a Proxy in the Satellite web
interface.  The packages set and configuration of the system will not
otherwise be affected.  Systems that connect to Satellite through this
proxy will need to be reconfigured to use a different Satellite server.
      </header>

      <rhn-form name="Deactivate Proxy" label="deactivate_proxy">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="checkbox" name="Remove Packages" label="remove_packages" default="1" checked="1" />
      </rhn-form>

    </collect-data>

    <activity description="Deactivate ${app.name} in local configuration">
      <method-call class="RHN::ProxyInstall" method="deactivate_proxy"/>
    </activity>

    <schedule-actions description="Deactivate ${app.name}">

      <run-script>
        <action-name>Stop ${app.name} Services</action-name>
        <script>
#!/bin/sh
/usr/sbin/rhn-proxy stop
  </script>
      </run-script>

      <run-script acl="session_data_true(remove_packages)">
        <action-name>Remove proxy packages</action-name>
        <script>
#!/bin/sh
PACKAGES=`for package in bdb_perl ConfigPusher-general eventReceivers FcntlLock jabberd libapreq2 MessageQueue mm mod_perl NOCpulsePlugins np-config NPalert NPusers nslogs oracle-devel oracle-instantclient-selinux oracle-nofcontext-selinux oracle_perl perl-Apache-Admin-Config perl-Apache-DBI perl-BerkeleyDB perl-BSD-Resource perl-Class-MethodMaker perl-Class-Singleton perl-Config-IniFiles perl-Crypt-DES perl-Crypt-GeneratePassword perl-Crypt-SSLeay perl-DateTime perl-DateTime-Locale perl-DateTime-TimeZone perl-DBD-Oracle perl-Devel-Symdump perl-Error perl-FreezeThaw perl-HTML-TableExtract perl-IO-Capture perl-IO-Socket-SSL perl-IO-stringy perl-libapreq2 perl-Mail-Alias perl-MailTools perl-MIME-tools perl-Net-SNMP perl-Network-IPv4Addr perl-Net_SSLeay perl-NOCpulse-CLAC perl-NOCpulse-Debug perl-NOCpulse-Gritch perl-NOCpulse-Object perl-NOCpulse-OracleDB perl-NOCpulse-PersistentConnection perl-NOCpulse-Probe perl-NOCpulse-ProcessPool perl-NOCpulse-Scheduler perl-NOCpulse-SetID perl-NOCpulse-Utils perl-Params-Validate perl-TimeDate perl-XML-Generator ProgAGoGo python-sgmlop rhn-base-minimal rhn-ssl-cert-check rhns rhns-auth-daemon rhns-certs-tools rhns-proxy-broker rhns-proxy-common rhns-proxy-docs rhns-proxy-monitoring rhns-proxy-package-manager rhns-proxy-redirect rhns-proxy-tools SatConfig-ApacheDepot SatConfig-bootstrap SatConfig-bootstrap-server SatConfig-cluster SatConfig-dbsynch SatConfig-general SatConfig-generator SatConfig-installer SatConfig-spread scdb scdb_accessor_perl SNMPAlerts SputLite-client SputLite-server ssl_bridge status_log_acceptor Time-System tsdb tsdb_accessor_perl httpd mod_python mod_ssl httpd httpd-suexec spacewalk-proxy-html spacewalk-ssl-cert-check spacewalk-monitoring-selinux spacewalk-proxy-common spacewalk-proxy-installer spacewalk-proxy-docs spacewalk-proxy-monitoring spacewalk-backend spacewalk-proxy-package-manager spacewalk-certs-tools spacewalk-proxy-broker spacewalk-proxy-management spacewalk-base-minimal spacewalk-proxy-redirect spacewalk-proxy-selinux nocpulse-common nocpulse-db-perl jabberd-selinux rhn-proxy-branding spacewalk-setup-jabberd; do
rpm -q $package >/dev/null &amp;&amp; echo $package; done`
if [ -n "$PACKAGES" ]; then
  rpm -e $PACKAGES
fi
        </script>
      </run-script>

    </schedule-actions>

    <collect-data description="Proxy deactivation scheduled" no-cancel="1">
      <header>
A deactivation for ${app.name} ${app.version} on ${system.name} has been scheduled. Please run
rhn_check on the proxy server to complete this process.
      </header>

      <rhn-form name="Deactivation Complete" label="deactivation_complete">
        <widget type="literal" label="Product" default="${app.name}" />
        <widget type="literal" label="Version" default="${app.version}" />
        <widget type="literal" name="Remove Packages" label="Remove Packages Yes" default="Yes" acl="session_data_true(remove_packages)"/>
	<widget type="literal" name="Remove Packages" label="Remove Packages No" default="No" acl="not session_data_true(remove_packages)"/>
        <widget type="hidden" label="continue_redir" default="/rhn/systems/details/Overview.do" />
      </rhn-form>
    </collect-data>

  </remove>

</application>
