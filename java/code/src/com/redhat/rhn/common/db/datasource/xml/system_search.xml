<datasource_modes>
<!-- NOTE: WHEN ADDING A MODE TO THIS FILE PLEASE ADD YOUR
     MODE TO the SystemManagerTest.testSystemSearch METHOD AS WELL -->
<mode name="systemsearch_name_and_description" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  S.id AS ID
  FROM  rhnUserServerPerms USP,
        rhnServer S
 WHERE  USP.user_id = :user_id
   AND  S.id = USP.server_id
   AND  (    ( INSTR(UPPER(S.name), UPPER(:search_string)) > 0 )
         OR  ( INSTR(UPPER(S.description), UPPER(:search_string)) > 0 ) )
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_name_and_description_elab"/>
</mode>

<query name="systemsearch_name_and_description_elab" params="">
SELECT S.id AS ID, S.description AS MATCHING_FIELD
  FROM rhnServer S
  WHERE S.id IN (%s)
</query>

<mode name="systemsearch_id" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  S.id AS ID
  FROM  rhnUserServerPerms USP,
        rhnServer S
 WHERE  USP.user_id = :user_id
   AND  S.id = USP.server_id
   AND  (   S.id = :search_string
         OR INSTR(S.id, :search_string) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_id_elab"/>
</mode>

<query name="systemsearch_id_elab" params="">
SELECT S.id AS ID, S.id AS MATCHING_FIELD
  FROM rhnServer S
  WHERE S.id IN (%s)
</query>

<mode name="systemsearch_snapshot_tag" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  DISTINCT ST.server_id AS ID
  FROM  rhnTagName TN,
        rhnTag T,
        rhnSnapshotTag ST,
        rhnUserServerPerms USP,
        web_contact wc
 WHERE  wc.id = :user_id
   AND  USP.user_id = :user_id
   AND  T.org_id = wc.org_id
   AND  T.name_id = TN.id
   AND  (INSTR(UPPER(TN.name), UPPER(:search_string)) > 0 )
   AND  USP.server_id = ST.server_id
   AND  ST.tag_id = T.id
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_snapshot_tag_elab"/>
</mode>

<query name="systemsearch_snapshot_tag_elab" params="user_id, search_string">
SELECT  S.id AS ID,
        TN.name AS MATCHING_FIELD
  FROM  rhnTagName TN,
        rhnTag T,
        rhnServer S,
        rhnSnapshotTag ST,
        rhnUserServerPerms USP,
        web_contact wc
 WHERE  wc.id = :user_id
   AND  USP.user_id = :user_id
   AND  T.org_id = wc.org_id
   AND  T.name_id = TN.id
   AND  (UPPER(TN.name) LIKE UPPER(:search_string))
   AND  USP.server_id = ST.server_id
   AND  ST.tag_id = T.id
   AND  ST.server_id = S.id
   AND  S.id IN (%s)
</query>

<mode name="systemsearch_checkin" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerInfo SI
		 WHERE  SI.server_id = USP.server_id
		   AND  SYSDATE - SI.checkin &gt; :search_string)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_checkin_elab"/>
</mode>

<query name="systemsearch_checkin_elab" params="">
SELECT  SI.server_id AS ID, TRUNC(SYSDATE - SI.checkin) AS MATCHING_FIELD
  FROM  rhnServerInfo SI
  WHERE  SI.server_id IN (%s)
</query>

<mode name="systemsearch_registered" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServer S
		 WHERE  S.id = USP.server_id
		   AND  SYSDATE - S.created &gt; :search_string)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_registered_elab"/>
</mode>

<query name="systemsearch_registered_elab" params="">
  SELECT  S.id ID, TRUNC(SYSDATE - S.created) MATCHING_FIELD
    FROM  rhnServer S
   WHERE  S.id IN (%s)
</query>

<mode name="systemsearch_installed_packages" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnPackageName PN, rhnPackageEVR PE, rhnServerPackage SP
                 WHERE  SP.server_id = USP.server_id
                   AND  SP.name_id = PN.id
                   AND  SP.evr_id = PE.id
                   AND  INSTR(UPPER(PN.name || '-' || PE.evr.as_vre_simple()), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_installed_packages_elab"/>
</mode>

<query name="systemsearch_installed_packages_elab" params="search_string" multiple="t">
  SELECT  SP.server_id ID, PN.name || '-' || PE.evr.as_vre_simple() AS MATCHING_FIELD
    FROM  rhnPackageName PN, rhnPackageEVR PE, rhnServerPackage SP
   WHERE  SP.server_id IN (%s)
     AND  PN.id = SP.name_id
     AND  PE.id = SP.EVR_ID
     AND  INSTR(UPPER(PN.name || '-' || PE.evr.as_vre_simple()), UPPER(:search_string)) > 0
ORDER BY  UPPER(PN.name || '-' || PE.evr.as_vre_simple())
</query>

<mode name="systemsearch_needed_packages" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnPackageName PN, rhnPackageEVR PE, rhnPackage P, rhnServerNeededPackageCache SNPC
                 WHERE  SNPC.server_id = USP.server_id
                   AND  SNPC.package_id = P.id
                   AND  P.name_id = PN.id
                   AND  P.evr_id = PE.id
                   AND  INSTR(UPPER(PN.name || '-' || PE.evr.as_vre_simple()), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_needed_packages_elab"/>
</mode>

<query name="systemsearch_needed_packages_elab" params="search_string" multiple="t">
  SELECT  DISTINCT SNPC.server_id ID, PN.name || '-' || PE.evr.as_vre_simple() MATCHING_FIELD
    FROM  rhnPackageName PN, rhnPackageEVR PE, rhnPackage P, rhnServerNeededPackageCache SNPC
   WHERE  SNPC.server_id IN (%s)
     AND  P.id = SNPC.package_id
     AND  PN.id = P.name_id
     AND  PE.id = P.EVR_ID
     AND  INSTR(UPPER(PN.name || '-' || PE.evr.as_vre_simple()), UPPER(:search_string)) > 0
ORDER BY  UPPER(PN.name || '-' || PE.evr.as_vre_simple())
</query>

<mode name="systemsearch_custom_info" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  DISTINCT SCDV.server_id AS ID
  FROM  rhnServerCustomDataValue SCDV,
        rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  USP.server_id = SCDV.server_id
   AND  (INSTR(UPPER(SCDV.value), UPPER(:search_string)) > 0 )
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_custom_info_elab"/>
</mode>

<query name="systemsearch_custom_info_elab" params="search_string">
  SELECT  S.id AS ID,
          (SELECT SCDV.value
             FROM rhnServerCustomDataValue SCDV
            WHERE SCDV.server_id = S.id
              AND UPPER(SCDV.value) LIKE UPPER(:search_string)
          ) AS MATCHING_FIELD
    FROM  rhnServer S
    WHERE S.id IN (%s)
ORDER BY  UPPER(NVL(S.name, '(none)')), S.id
</query>

<mode name="systemsearch_dmi_system" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnServerdmi SD, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  SD.server_id = USP.server_id
   AND  ( INSTR(UPPER(SD.vendor || SD.system || SD.product), UPPER(:search_string)) > 0 )
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_dmi_system_elab"/>
</mode>

<query name="systemsearch_dmi_system_elab" params="" multiple="f">
  SELECT  SD.server_id ID, SD.vendor || ' ' || SD.system || ' ' || SD.product MATCHING_FIELD
    FROM  rhnServerDMI SD
   WHERE  SD.server_id IN (%s)
</query>

<mode name="systemsearch_dmi_bios" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnServerdmi SD, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  SD.server_id = USP.server_id
   AND  INSTR(UPPER(SD.bios_vendor || SD.bios_version || SD.bios_release), UPPER(:search_string) ) > 0
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_dmi_bios_elab"/>
</mode>

<query name="systemsearch_dmi_bios_elab" params="" multiple="f">
  SELECT  SD.server_id ID, SD.bios_vendor || ' ' || SD.bios_version ||
            ' - ' || SD.bios_release MATCHING_FIELD
    FROM  rhnServerDMI SD
   WHERE  SD.server_id IN (%s)
</query>

<mode name="systemsearch_dmi_asset" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnServerdmi SD, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  SD.server_id = USP.server_id
   AND  INSTR(UPPER(SD.asset), UPPER(:search_string) ) > 0
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_dmi_asset_elab"/>
</mode>

<query name="systemsearch_dmi_asset_elab" params="" multiple="f">
  SELECT  SD.server_id ID, SD.asset MATCHING_FIELD
    FROM  rhnServerDMI SD
   WHERE  SD.server_id IN (%s)
</query>

<mode name="systemsearch_location_address" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerLocation SL
		 WHERE  SL.server_id = USP.server_id
		   AND  INSTR(UPPER(SL.address1 || ' ' || SL.address2
                        || ' ' || SL.city || ', ' || SL.state || ' ' || SL.country),
                        UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_location_address_elab"/>
</mode>

<query name="systemsearch_location_address_elab" params="" multiple="f">
  SELECT  SL.server_id ID, SL.address1 || ' ' || SL.address2 || ' ' ||
            SL.city || ', ' || SL.state || ' ' || SL.country MATCHING_FIELD
    FROM  rhnServerLocation SL
   WHERE  SL.server_id IN (%s)
</query>

<mode name="systemsearch_location_building" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerLocation SL
		 WHERE  SL.server_id = USP.server_id
		   AND  INSTR(UPPER(SL.building), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_location_building_elab"/>
</mode>

<query name="systemsearch_location_building_elab" params="" multiple="f">
  SELECT  SL.server_id AS ID, SL.building MATCHING_FIELD
    FROM  rhnServerLocation SL
   WHERE  SL.server_id IN (%s)
</query>

<mode name="systemsearch_location_room" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerLocation SL
		 WHERE  SL.server_id = USP.server_id
		   AND  INSTR(UPPER(SL.room), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_location_room_elab"/>
</mode>

<query name="systemsearch_location_room_elab" params="" multiple="f">
  SELECT  SL.server_id AS ID, SL.room MATCHING_FIELD
    FROM  rhnServerLocation SL
   WHERE  SL.server_id IN (%s)
</query>

<mode name="systemsearch_location_rack" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerLocation SL
		 WHERE  SL.server_id = USP.server_id
		   AND  INSTR(UPPER(SL.rack), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_location_rack_elab"/>
</mode>

<query name="systemsearch_location_rack_elab" params="" multiple="f">
  SELECT  SL.server_id AS ID, SL.rack MATCHING_FIELD
    FROM  rhnServerLocation SL
   WHERE  SL.server_id IN (%s)
</query>

<mode name="systemsearch_hwdevice_description" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnhwdevice HD
		 WHERE  HD.server_id = USP.server_id
		   AND  INSTR(UPPER(HD.description || HD.device), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_hwdevice_description_elab"/>
</mode>

<query name="systemsearch_hwdevice_description_elab" params="search_string" multiple="t">
  SELECT  HD.server_id AS ID, HD.description || ' ' || HD.device MATCHING_FIELD
    FROM  rhnHwDevice HD
   WHERE  HD.server_id IN (%s)
     AND  UPPER(HD.description || HD.device) LIKE UPPER(:search_string)
</query>

<mode name="systemsearch_hwdevice_device_id" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnhwdevice HD
		 WHERE  HD.server_id = USP.server_id
		   AND  INSTR(UPPER(HD.device_id || ' ' || HD.subdevice_id), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_hwdevice_device_id_elab"/>
</mode>

<query name="systemsearch_hwdevice_device_id_elab" params="search_string" multiple="t">
  SELECT  HD.server_id ID, HD.description || ' - ' || HD.device_id || ' ' || HD.subdevice_id MATCHING_FIELD
    FROM  rhnHwDevice HD
   WHERE  HD.server_id IN (%s)
     AND  UPPER(HD.device_id || ' ' || HD.subdevice_id) LIKE UPPER(:search_string)
</query>

<mode name="systemsearch_hwdevice_driver" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnhwdevice HD
		 WHERE  HD.server_id = USP.server_id
		   AND  INSTR(UPPER(HD.driver), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_hwdevice_driver_elab"/>
</mode>

<query name="systemsearch_hwdevice_driver_elab" params="search_string" multiple="t">
  SELECT  HD.server_id ID, HD.description || ' - ' || HD.driver MATCHING_FIELD
    FROM  rhnHwDevice HD
   WHERE  HD.server_id IN (%s)
     AND  UPPER(HD.driver) LIKE UPPER(:search_string)
</query>

<mode name="systemsearch_hwdevice_vendor_id" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnhwdevice HD
		 WHERE  HD.server_id = USP.server_id
		   AND  INSTR(UPPER(HD.vendor_id || ' ' || HD.subvendor_id), UPPER(:search_string)) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_hwdevice_vendor_id_elab"/>
</mode>

<query name="systemsearch_hwdevice_vendor_id_elab" params="search_string" multiple="t">
  SELECT  HD.server_id ID, HD.description || ' - ' || HD.vendor_id || ' ' || HD.subvendor_id MATCHING_FIELD
    FROM  rhnHwDevice HD
   WHERE  HD.server_id IN (%s)
     AND  UPPER(HD.vendor_id || ' ' || HD.subvendor_id) LIKE UPPER(:search_string)
</query>

<mode name="systemsearch_hostname" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnServerNetwork SN, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  SN.server_id = USP.server_id
   AND  INSTR(UPPER(SN.hostname), UPPER(:search_string) ) > 0
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_hostname_elab"/>
</mode>

<query name="systemsearch_hostname_elab" params="" multiple="f">
  SELECT  SN.server_id ID, SN.hostname MATCHING_FIELD
    FROM  rhnServerNetwork SN
   WHERE  SN.server_id IN (%s)
</query>

<mode name="systemsearch_ip" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerNetwork SN
		 WHERE  SN.server_id = USP.server_id
		   AND  INSTR(SN.ipaddr, :search_string) > 0 )
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_ip_elab"/>
</mode>

<mode name="systemsearch_ipv6" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT  1
                  FROM  rhnServerNetwork SN
     WHERE  SN.server_id = USP.server_id
       AND  INSTR(SN.ip6addr, :search_string) > 0 )
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_ip6_elab"/>
</mode>

<query name="systemsearch_ip_elab" params="" multiple="f">
  SELECT  SN.server_id AS ID, SN.ipaddr MATCHING_FIELD
    FROM  rhnServerNetwork SN
   WHERE  SN.server_id IN(%s)
</query>

<query name="systemsearch_ip6_elab" params="" multiple="f">
  SELECT  SN.server_id AS ID, SN.ip6addr MATCHING_FIELD
    FROM  rhnServerNetwork SN
   WHERE  SN.server_id IN(%s)
</query>

<mode name="systemsearch_cpu_model" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  EXISTS (SELECT 1
                  FROM rhnCPU C
                 WHERE C.server_id = USP.server_id
                   AND INSTR(UPPER(C.model), UPPER(:search_string) ) > 0)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_cpu_model_elab"/>
</mode>

<query name="systemsearch_cpu_model_elab" params="" multiple="t">
  SELECT  C.server_id id, C.model MATCHING_FIELD
    FROM  rhnCpu C
   WHERE  C.server_id IN (%s)
</query>

<mode name="systemsearch_cpu_mhz_lt" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  distinct USP.server_id AS ID
  FROM  rhnCPU C, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  USP.server_id = C.server_id
   AND  TO_NUMBER(C.mhz) &lt; TO_NUMBER(:search_string)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_cpu_mhz_elab"/>
</mode>

<mode name="systemsearch_cpu_mhz_gt" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  distinct USP.server_id AS ID
  FROM  rhnCPU C, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  USP.server_id = C.server_id
   AND  TO_NUMBER(C.mhz) &gt; TO_NUMBER(:search_string)
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_cpu_mhz_elab"/>
</mode>

<query name="systemsearch_cpu_mhz_elab" params="" multiple="t">
  SELECT  C.server_id ID, C.mhz MATCHING_FIELD
    FROM  rhnCpu C
   WHERE  C.server_id IN (%s)
</query>

<mode name="systemsearch_ram_lt" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  distinct USP.server_id AS ID
  FROM  rhnRAM R, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  USP.server_id = R.server_id
   AND  R.ram &lt; :search_string
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_ram_elab"/>
</mode>

<mode name="systemsearch_ram_gt" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  distinct USP.server_id AS ID
  FROM  rhnRAM R, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  USP.server_id = R.server_id
   AND  R.ram > :search_string
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_ram_elab"/>
</mode>

<query name="systemsearch_ram_elab" params="" multiple="t">
  SELECT  R.server_id ID, R.ram MATCHING_FIELD
    FROM  rhnRAM R
   WHERE  R.server_id IN (%s)
</query>

<mode name="systemsearch_uuid" class="com.redhat.rhn.frontend.dto.SystemSearchResult">
  <query params="user_id, search_string">
SELECT  USP.server_id AS ID
  FROM  rhnVirtualInstance VI, rhnUserServerPerms USP
 WHERE  USP.user_id = :user_id
   AND  VI.virtual_system_id = USP.server_id
   AND  INSTR(UPPER(VI.uuid), UPPER(:search_string) ) > 0
  </query>
  <elaborator name="entitlements"/>
  <elaborator name="base_elaborator"/>
  <elaborator name="systemsearch_uuid_elab"/>
</mode>

<query name="systemsearch_uuid_elab" params="" multiple="f">
  SELECT  VI.virtual_system_id ID, VI.uuid MATCHING_FIELD
    FROM  rhnVirtualInstance VI
   WHERE  VI.virtual_system_id IN (%s)
</query>

<query name="entitlements" params="" multiple="t">
  SELECT SEV.server_id AS ID,
         SEV.label AS ENTITLEMENT,
         SEV.server_group_type_id,
         SEV.permanent AS entitlement_permanent,
         SEV.is_base AS entitlement_is_base
    FROM rhnServerEntitlementView SEV
   WHERE SEV.server_id IN (%s)
   ORDER BY CASE SEV.is_base WHEN 'Y' THEN 1 WHEN 'N' THEN 2 END, SEV.label
</query>

<query name="base_elaborator" params="">
SELECT S.id AS ID, S.name AS SERVER_NAME,
       NVL((SELECT 1 FROM rhnServerFeaturesView SFV WHERE SFV.server_id = S.id AND SFV.label = 'ftr_system_grouping'), 0) AS SELECTABLE
  FROM rhnServer S
  WHERE S.id IN (%s)
ORDER BY  UPPER(NVL(S.name, '(none)')), S.id
</query>
</datasource_modes>

