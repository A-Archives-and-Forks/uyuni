<datasource_modes>

<mode name="system_scap_enabled_check">
  <query params="user_id, sid">
  SELECT count(cc.server_id) as count
      FROM rhnClientCapability CC
          INNER JOIN rhnClientCapabilityName ccn on cc.capability_name_id = ccn.id
          INNER JOIN rhnUserServerPerms usp on cc.server_id = usp.server_id
      WHERE usp.user_id = :user_id
          AND cc.server_id = :sid
          AND ccn.name LIKE 'scap%'
  </query>
</mode>

<mode name="show_system_scans">
  <query params="sid">
  SELECT tr.id, tr.identifier as test_result, rrt.label, count(*) as figure,
      TO_CHAR(sa.completion_time, 'YYYY-MM-DD HH24:MI:SS') AS completion_time
      FROM rhnXccdfTestresult tr,
          rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE tr.server_id = :sid
          AND tr.id = rr.testresult_id
          AND rr.result_id = rrt.id
          AND tr.action_scap_id = ras.id
          AND sa.server_id = tr.server_id
          AND sa.action_id = ras.action_id
      GROUP BY tr.id, tr.identifier, rrt.label, sa.completion_time
      ORDER BY tr.id DESC
  </query>
</mode>

<mode name="latest_testresults_by_user" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <elaborator name="testresult_counts"/>
  <query params="user_id">
  SELECT
      tr.id as xid,
      tr.server_id as sid,
      s.name as server_name,
      xp.identifier as profile,
      sa.completion_time as completed
      FROM rhnUserServerPerms usp,
          rhnXccdfTestresult tr,
          rhnXccdfProfile xp,
          rhnActionScap ras,
          rhnServerAction sa,
          rhnServer s
      WHERE usp.user_id = :user_id
          AND usp.server_id = tr.server_id
          AND sa.server_id = tr.server_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND tr.profile_id = xp.id
          AND s.id = tr.server_id
      ORDER BY completed DESC
  </query>
</mode>

<mode name="latest_testresults_by_server" class="com.redhat.rhn.frontend.dto.XccdfTestResultDto">
  <query params="user_id, sid">
  SELECT
      tr.id AS xid,
      xp.identifier AS profile,
      ras.path AS path,
      sa.completion_time AS completed
      FROM rhnUserServerPerms usp,
          rhnXccdfTestresult tr,
          rhnXccdfProfile xp,
          rhnActionScap ras,
          rhnServerAction sa
      WHERE usp.user_id = :user_id
          AND usp.server_id = :sid
          AND usp.server_id = tr.server_id
          AND sa.server_id = tr.server_id
          AND tr.action_scap_id = ras.id
          AND sa.action_id = ras.action_id
          AND tr.profile_id = xp.id
      ORDER BY completed DESC
  </query>
</mode>

<query name="testresult_counts" multiple="t" column="xid">
  SELECT tr.id as xid, rrt.label, count(rr.id) as count
  FROM rhnXccdfTestresult tr,
      rhnXccdfRuleresult rr,
      rhnXccdfRuleresultType rrt
  WHERE tr.id in (%s)
      AND tr.id = rr.testresult_id
      AND rr.result_id = rrt.id
  GROUP BY tr.id, rrt.label
</query>

<mode name="show_ruleresults" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="xid">
  SELECT rr.id, rrt.label, rr.testresult_id as test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt
      WHERE rr.testresult_id = :xid
          AND rr.result_id = rrt.id
      ORDER BY rrt.id
  </query>
</mode>

<mode name="ruleresult_by_id" class="com.redhat.rhn.frontend.dto.XccdfRuleResultDto">
  <query params="rr_id">
  SELECT rr.id, rrt.label, rr.testresult_id as test_result_id
      FROM rhnXccdfRuleresult rr,
          rhnXccdfRuleresultType rrt
      WHERE rr.id = :rr_id
          AND rr.result_id = rrt.id
  </query>
</mode>

<mode name="idents_per_ruleresult" class="com.redhat.rhn.frontend.dto.XccdfIdentDto">
  <query params="rr_id">
  SELECT xi.id, xi.identifier, xis.system
      FROM rhnXccdfRuleIdentMap rim,
          rhnXccdfIdent xi,
          rhnXccdfIdentSystem xis
      WHERE rim.rresult_id = :rr_id
          AND rim.ident_id = xi.id
          AND xi.identsystem_id = xis.id
      ORDER BY xis.system
  </query>
</mode>

<mode name="scap_capable_systems_in_set">
  <query params="user_id, set_label">
  SELECT DISTINCT usp.server_id AS id
      FROM rhnUserServerPerms usp
          INNER JOIN rhnSet st ON st.user_id = usp.user_id
              AND st.element = usp.server_id
      WHERE st.user_id = :user_id
          AND st.label = :set_label
          AND EXISTS (
              SELECT 1
                  FROM rhnClientCapability cc
                      INNER JOIN rhnClientCapabilityName ccn ON cc.capability_name_id = ccn.id
                  WHERE cc.server_id = usp.server_id
                      AND ccn.name LIKE 'scap%'
          )
  </query>
</mode>

<mode name="is_available_to_user">
  <query params="user_id, xid">
  SELECT 1
      FROM rhnXccdfTestResult tr,
          rhnUserServerPerms usp
      WHERE tr.id = :xid
          AND usp.server_id = tr.server_id
          AND usp.user_id = :user_id
  </query>
</mode>

<mode name="systems_in_set_and_scap_capability">
  <query params="user_id, set_label">
  SELECT DISTINCT s.id AS sid,
      s.name AS name,
      (SELECT 1
          FROM rhnClientCapability cc
              INNER JOIN rhnClientCapabilityName ccn ON cc.capability_name_id = ccn.id
          WHERE cc.server_id = usp.server_id
              AND ccn.name LIKE 'scap%'
      ) AS scap
      FROM rhnUserServerPerms usp
          INNER JOIN rhnSet st ON st.user_id = usp.user_id
              AND st.element = usp.server_id
          INNER JOIN rhnServer s ON s.id = usp.server_id
      WHERE st.user_id = :user_id
          AND st.label = :set_label
      ORDER BY name ASC
  </query>
</mode>

</datasource_modes>
