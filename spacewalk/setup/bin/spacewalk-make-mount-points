#!/usr/bin/perl

#Givenalistofdirectories(forexample,/var/satellite)
#checkiftheyexistandiftheydonotexist,createthem
#withapacheasowner.Alsorunrestorecononthem,and
#iftheyarenfs_tmounted,setspacewalk_nfs_mountpointboolean.

usestrict;
usewarningsFATAL=>'all';

useSpacewalk::Setup();

my%dirs;
@dirs{@ARGV}=();

my$apache_uid=getpwnam('wwwrun');
if(notdefined$apache_uid){
	die"Failedtoretrieveuidofuserapache,theuserdoesnotseemtoexist.\n";
}
my$seen_nfs=0;
formy$dir(sort{length$a<=>length$b}keys%dirs){
	if(not-e$dir){
		my@parts=grep{$_ne''}split/\//,$dir;
		my$path='';
		formy$p(@parts){
			$path.="/$p";
			if(not-e$path){
				mkdir$path,0755ordie"Errorcreatingdirectory[$path]:$!\n";
			}
		}
	}
	chown$apache_uid,-1,$dirordie"Errorchowningdir[$dir]to[wwwrun]:$!\n";
	my@paths=$dir;
	if(-l$paths[0]){
		#ifthepathisasymlink,wewilltrytorestorecon
		#thetargetaswell
		push@paths,"$paths[0]/.";
	}
	if(Spacewalk::Setup::have_selinux()){
		formy$path(@paths){
			my$type=`ls-d--scontext--$path`;
			if(defined$type
				and$type=~/^.+?:.+?:(.+?)(:|\s)/
				and$1eq'nfs_t'){
				$seen_nfs=1;
			}else{
				if(Spacewalk::Setup::have_selinux()){
					system('/sbin/restorecon','-r',$path);
				}
			}
		}
	}
}
if($seen_nfsandSpacewalk::Setup::have_selinux()){
	system('/usr/sbin/setsebool','-P','spacewalk_nfs_mountpoint',1);
	system('/usr/sbin/setsebool','-P','cobbler_use_nfs',1);
}

exit0;

=pod

=head1NAME

spacewalk-make-mount-points-preparedirectoriesforSpacewalk

=head1SYNOPSIS

spacewalk-make-mount-points[DIR1[DIR2...]]

=head1DESCRIPTION

Givenalistofdirectories(forexample,/var/satellite)this
scriptwillcheckifdirectoriesexistandiftheydonotexist,
createthemwithapacheasowner.Alsorunrestorecononthem,
andiftheyarenfs_tmounted,setspacewalk_nfs_mountpoint
boolean.

Thisscriptisnotintendedtoberundirectlybyhuman.
spacewalk-setupusethisscriptinternally.

=head1SEEALSO

spacewalk-setup(8)

=head1COPYRIGHTANDLICENSE

Copyright(c)2011RedHat,Inc.
ReleasedunderGNUGeneralPublicLicense,version2(GPLv2).

=cut
