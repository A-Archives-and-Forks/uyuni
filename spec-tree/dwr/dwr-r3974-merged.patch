diff -ru dwr-3.0rc2.orig/core/impl/main/java/org/directwebremoting/engine.js dwr-3.0rc2/core/impl/main/java/org/directwebremoting/engine.js
--- dwr-3.0rc2.orig/core/impl/main/java/org/directwebremoting/engine.js	2011-06-26 01:02:44.000000000 +0200
+++ dwr-3.0rc2/core/impl/main/java/org/directwebremoting/engine.js	2013-04-08 11:20:11.811589537 +0200
@@ -178,10 +178,10 @@
    */
   dwr.engine.defaultErrorHandler = function(message, ex) {
     dwr.engine._debug("Error: " + ex.name + ", " + ex.message, true);
-    if (message == null || message == "") alert("A server error has occurred.");
     // Ignore NS_ERROR_NOT_AVAILABLE if Mozilla is being narky
-    else if (message.indexOf("0x80040111") != -1) dwr.engine._debug(message);
-    else alert(message);
+    if (message.indexOf("0x80040111") != -1) return;
+    if (message === null || message === "") message = "A server error has occurred.";
+    if ("${debug}" == "true") alert(message);
   };
 
   /**
@@ -462,6 +462,26 @@
     "$_dwrConversionRef": true
   };
 
+  /** Is this page doing beforeunload processing? */
+  dwr.engine._beforeUnloading = false;
+
+  /** @private Keep beforeunload flag set during beforeunload processing (including potential
+   *  "Are you sure?" popups). */
+  dwr.engine._beforeUnloader = function() {
+    dwr.engine._beforeUnloading = true;
+    // We want to reset the flag if unloading is aborted by "Are you sure?" popup. We detect
+    // return to interactive mode with a timeout that normally will execute directly after
+    // unload is aborted through popup.
+    setTimeout(function() {
+      // Some browsers (f ex Firefox) will execute the timeout even if unload is not aborted.
+      // To keep a continuous unloading state we therefore prolong the beforeunload state for
+      // a second so the unload flag gets time to trigger.
+      setTimeout(function() {
+        dwr.engine._beforeUnloading = false;
+      }, 1000);
+    }, 1); 
+  }
+
   /** Is this page in the process of unloading? */
   dwr.engine._unloading = false;
 
@@ -507,18 +527,18 @@
   };
 
   function ignoreIfUnloading(batch, f) {
+    // Do nothing if we are unloading
     if (dwr.engine._unloading) return;
-    if (batch && batch.async == false) {
-      // Sync calls are reported synchronously
-      f();
-    }
-    else {
-      // We delay error reporting for async calls to see if maybe unloading just started
+    // Retry later if beforeunload is in progress and this is not a sync call
+    if (dwr.engine._beforeUnloading && (batch == null || batch.async)) {
       setTimeout(function() {
-        if (dwr.engine._unloading) return;
-        f();
+        ignoreIfUnloading(batch, f);
       }, 100);
     }
+    // Otherwise trigger the target func
+    else {
+      return f();
+    }
   }
 
   /**
@@ -2428,8 +2448,9 @@
   // Reuse any existing dwr session
   dwr.engine.transport.updateDwrSessionFromCookie();
 
-  // Register the unload handler
+  // Register unload handlers
   if (!dwr.engine.isJaxerServer) {
+    dwr.engine.util.addEventListener(window, 'beforeunload', dwr.engine._beforeUnloader);
     dwr.engine.util.addEventListener(window, 'unload', dwr.engine._unloader);
   }
 
